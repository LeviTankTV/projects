package GameV2;

import java.util.List;
import java.util.Random;

public class GolemBoss extends Boss {
    private static final int HEAL_AMOUNT = 250; // Amount to heal

    public GolemBoss(String name, int level) {
        super(name, level, 7500, 0, 20, 0);
    }

    private static final String RED = "\u001B[31m";
    private static final String GREEN = "\u001B[32m";
    private static final String YELLOW = "\u001B[33m";
    private static final String BLUE = "\u001B[34m";
    private static final String PURPLE = "\u001B[35m";

    @Override
    public void performAction(Game game, Room room) {
        Random random = new Random();
        int actionChoice = random.nextInt(100); // –°–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ –æ—Ç 0 –¥–æ 99

        // 50% —à–∞–Ω—Å –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞—Ç—å
        if (actionChoice < 50) {
            System.out.println(YELLOW + getName() + " –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ—Ç –Ω–∞ —ç—Ç–æ–º —Ö–æ–¥—É..." + RESET);
            return; // –ù–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞—Ç—å
        }

        // 25% —à–∞–Ω—Å –ø—Ä–∏–∑–≤–∞—Ç—å –≥–æ–ª–µ–º–∞
        if (actionChoice < 75) {
            summonGolem(game, room);
            return; // –ü—Ä–∏–∑–≤–∞—Ç—å –≥–æ–ª–µ–º–∞
        }

        // 25% —à–∞–Ω—Å –∞—Ç–∞–∫–æ–≤–∞—Ç—å –∏–ª–∏ –∏—Å—Ü–µ–ª–∏—Ç—å
        if (random.nextBoolean()) {
            attackWithTargets(game, room);
        } else {
            healSelf();
        }
    }

    private void summonGolem(Game game, Room room) {
        System.out.println(PURPLE + getName() + " –ø—Ä–∏–∑—ã–≤–∞–µ—Ç –º–æ–≥—É—á–µ–≥–æ –≥–æ–ª–µ–º–∞!" + RESET);
        GolemFactory golemFactory = new GolemFactory(); // –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è, —á—Ç–æ —É –≤–∞—Å –µ—Å—Ç—å GolemFactory
        Golem newGolem = golemFactory.createGolem(game.getPlayer()); // –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ–≥–æ –≥–æ–ª–µ–º–∞
        room.addEnemy(newGolem); // –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è, —á—Ç–æ —É Room –µ—Å—Ç—å –º–µ—Ç–æ–¥ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤—Ä–∞–≥–æ–≤
        System.out.println(GREEN + newGolem.getName() + " –≤–æ—Å—Å—Ç–∞–µ—Ç –∏ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω—è–µ—Ç—Å—è –∫ –±–∏—Ç–≤–µ!" + RESET);
    }

    private void attackWithTargets(Game game, Room room) {
        List<Entity> targets = getTargets(game, room);

        // –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –µ—Å—Ç—å —Ü–µ–ª–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞
        if (!targets.isEmpty()) {
            Random random = new Random();
            int targetIndex = random.nextInt(targets.size());
            Entity target = targets.get(targetIndex);

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ü–µ–ª—å —Ç–µ–º –∂–µ –æ–±—ä–µ–∫—Ç–æ–º
            if (target != this) {
                Weapon weapon = getWeapon();
                attack(target, weapon); // –í—ã–ø–æ–ª–Ω–∏—Ç—å –∞—Ç–∞–∫—É —Å –ø–æ–º–æ—â—å—é –æ—Ä—É–∂–∏—è
            }
        }
    }

    private void healSelf() {
        double newHealth = Math.min(getHealth() + HEAL_AMOUNT, getMaxHealth()); // –ò—Å—Ü–µ–ª–∏—Ç—å –∏ —É–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∑–¥–æ—Ä–æ–≤—å–µ –Ω–µ –ø—Ä–µ–≤—ã—à–µ–Ω–æ
        setHealth(newHealth); // –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è, —á—Ç–æ –µ—Å—Ç—å –º–µ—Ç–æ–¥ –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–¥–æ—Ä–æ–≤—å—è
        System.out.println(GREEN + getName() + " –∏—Å—Ü–µ–ª—è–µ—Ç —Å–µ–±—è –Ω–∞ " + HEAL_AMOUNT + " HP! üåü" + RESET);
    }


    @Override
    public void dropLoot(Game game) {
        super.dropLoot(game);
        Random random = new Random();
        if (random.nextDouble() < 0.5) {
            game.getPlayer().getInventory().addItem(new RockBomb());

            System.out.println(WHITE_BOLD + "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê –ú–ò–§–ò–ß–ï–°–ö–ê–Ø –î–û–ë–´–ß–ê ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó" + RESET);
            System.out.println(WHITE_BOLD + "‚ïë" + PURPLE_BOLD + "    üí£ " + getName() + " —Ä–æ–Ω—è–µ—Ç –ö–∞–º–µ–Ω–Ω—É—é –ë–æ–º–±—É!    " + WHITE_BOLD + "‚ïë" + RESET);
            System.out.println(WHITE_BOLD + "‚ïë" + RED_BOLD + "        ‚öúÔ∏è –ú–ò–§–ò–ß–ï–°–ö–ò–ô –ü–†–ï–î–ú–ï–¢! ‚öúÔ∏è         " + WHITE_BOLD + "‚ïë" + RESET);
            System.out.println(WHITE_BOLD + "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù" + RESET);
        }

        if (random.nextDouble() < 0.5) {
            game.getPlayer().getInventory().addItem(new GolemKingWand());

            System.out.println(WHITE_BOLD + "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê –ú–ò–§–ò–ß–ï–°–ö–ê–Ø –î–û–ë–´–ß–ê ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó" + RESET);
            System.out.println(WHITE_BOLD + "‚ïë" + PURPLE_BOLD + "    ü™Ñ " + getName() + " —Ä–æ–Ω—è–µ—Ç –ñ–µ–∑–ª –ö–æ—Ä–æ–ª—è –ì–æ–ª–µ–º–æ–≤!    " + WHITE_BOLD + "‚ïë" + RESET);
            System.out.println(WHITE_BOLD + "‚ïë" + RED_BOLD + "        ‚öúÔ∏è –ú–ò–§–ò–ß–ï–°–ö–ò–ô –ü–†–ï–î–ú–ï–¢! ‚öúÔ∏è         " + WHITE_BOLD + "‚ïë" + RESET);
            System.out.println(WHITE_BOLD + "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù" + RESET);
        }
    }
    private static final String RESET = "\u001B[0m";
    private static final String WHITE_BOLD = "\u001B[1;37m";
    private static final String PURPLE_BOLD = "\u001B[1;35m";
    private static final String RED_BOLD = "\u001B[1;31m";
}